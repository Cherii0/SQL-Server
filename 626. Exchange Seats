======================================SOLUTION 1======================================

SELECT
	Seat1.id,
	CASE WHEN (Seat2.id IS NULL) THEN Seat1.student ELSE Seat2.student END AS student
FROM 
(
    SELECT 
        *, 
        id + (id % 2) AS con2
    FROM Seat
) AS Seat1
LEFT JOIN 
(
    SELECT 
        *, 
        id + (id % 2) AS con2
    FROM Seat
) AS Seat2
ON Seat1.id <> Seat2.id AND Seat1.con2 = Seat2.con2
ORDER BY id ASC


======================================SOLUTION 2======================================

SELECT
	id,
	CASE WHEN (swap_condition = 1) 
		THEN LEAD(student, 1, student) OVER(ORDER BY id)
		ELSE LAG(student, 1) OVER(ORDER BY id) END AS student
FROM (
SELECT 
	*,
	(id % 2) AS swap_condition
FROM 
	Seat
) AS temp

======================================QUESTION======================================

Table: Seat
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| student     | varchar |
+-------------+---------+
id is the primary key (unique value) column for this table.
Each row of this table indicates the name and the ID of a student.
The ID sequence always starts from 1 and increments continuously.

Write a solution to swap the seat id of every two consecutive students. If the number of students is odd, the id of the last student is not swapped.
Return the result table ordered by id in ascending order.
