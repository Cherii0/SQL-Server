=====================================SOLUTION=================================

SELECT * FROM Student 
WHERE student_id NOT IN (
SELECT DISTINCT T.student_id FROM (
	SELECT 
			S.*,
			DENSE_RANK() OVER (PARTITION BY  E.exam_id ORDER BY E.score) AS rank,
			DENSE_RANK() OVER (PARTITION BY E.exam_id ORDER BY E.score DESC) AS rank_rev

	FROM 
			Exam AS E
	FULL OUTER JOIN Student AS S ON S.student_id = E.student_id
) AS T
WHERE
	rank = 1 OR rank_rev = 1
)
ORDER BY student_id

=====================================QUESTION=================================

Table: Student
+---------------------+---------+
| Column Name         | Type    |
+---------------------+---------+
| student_id          | int     |
| student_name        | varchar |
+---------------------+---------+
student_id is the primary key (column with unique values) for this table.
student_name is the name of the student.

Table: Exam
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| exam_id       | int     |
| student_id    | int     |
| score         | int     |
+---------------+---------+
(exam_id, student_id) is the primary key (combination of columns with unique values) for this table.
Each row of this table indicates that the student with student_id had a score points in the exam with id exam_id.

A quiet student is the one who took at least one exam and did not score the highest or the lowest score.
Write a solution to report the students (student_id, student_name) being quiet in all exams. Do not return the student who has never taken any exam.
Return the result table ordered by student_id.
